// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCore3.Api.DataAccess;

namespace NetCore3.Api.DataAccess.Migrations
{
    [DbContext(typeof(MoocDbContext))]
    partial class MoocDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetCore3.Api.DataAccess.Contracts.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f11f51ad-355e-4bc6-9c9a-9acfb564bdba"),
                            Job = "Computer Science",
                            Name = "Adan",
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = new Guid("b2fd6b81-3a0e-4e8f-9eed-4dd659049831"),
                            Job = "Software Developer",
                            Name = "Ben",
                            Surname = "Anderson"
                        },
                        new
                        {
                            Id = new Guid("51751abd-82a9-443e-bf6a-1566d3cc0ff4"),
                            Job = "Scrum Master",
                            Name = "Elliot",
                            Surname = "Simpson"
                        });
                });

            modelBuilder.Entity("NetCore3.Api.DataAccess.Contracts.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98f83831-f789-45fc-9a12-45f6198bf8ba"),
                            AuthorId = new Guid("f11f51ad-355e-4bc6-9c9a-9acfb564bdba"),
                            Description = "Python MOOC",
                            Title = "Python MOOC"
                        },
                        new
                        {
                            Id = new Guid("b398859a-7fb6-4866-a474-d043bff65e52"),
                            AuthorId = new Guid("51751abd-82a9-443e-bf6a-1566d3cc0ff4"),
                            Description = "Scrum Master MOOC",
                            Title = "Scrum Master Certification"
                        });
                });

            modelBuilder.Entity("NetCore3.Api.DataAccess.Contracts.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Birthday")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("239ad284-edea-41e8-9e28-29fe4030e43f"),
                            Birthday = new DateTimeOffset(new DateTime(1995, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            Name = "Helen",
                            Surname = "Murray"
                        },
                        new
                        {
                            Id = new Guid("fcd3a962-bab8-4f29-b9f5-77d60ecfd5e6"),
                            Birthday = new DateTimeOffset(new DateTime(2000, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 1, 0, 0, 0)),
                            Name = "Bill",
                            Surname = "Mirren"
                        });
                });

            modelBuilder.Entity("NetCore3.Api.DataAccess.Contracts.Entities.StudentCourse", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("b398859a-7fb6-4866-a474-d043bff65e52"),
                            CourseId = new Guid("239ad284-edea-41e8-9e28-29fe4030e43f")
                        });
                });

            modelBuilder.Entity("NetCore3.Api.DataAccess.Contracts.Entities.Course", b =>
                {
                    b.HasOne("NetCore3.Api.DataAccess.Contracts.Entities.Author", "Author")
                        .WithMany("Courses")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NetCore3.Api.DataAccess.Contracts.Entities.StudentCourse", b =>
                {
                    b.HasOne("NetCore3.Api.DataAccess.Contracts.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCore3.Api.DataAccess.Contracts.Entities.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
